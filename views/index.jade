doctype html
html(lang='en')
  head
    title PRV
    meta(charset='utf8')
    meta(name='robots', content='noindex, nofollow')
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='icon', href='/favicon.ico')

    script(src='/javascripts/jquery-1.11.1.min.js')
    script(src='/javascripts/favico-0.3.5.min.js')
    script.
      (function() {

        var favicon;
        try {
          favicon = new Favico({ animation: 'none' });
        } catch (e) {
          console.warn(e);
        }
        function updateBadge() {
          if (favicon == null) return;
          var count = Number($(document.body).data('count'));
          favicon.badge(count);
        }
        $(document).on('ready', updateBadge);

        // A simple document.reload() fails when the connection cuts out.
        // Instead, reload the body of the page through XHR and keep trying if
        // there's a failure.
        var settings = {
          cache: false,
          dataType: 'html',
          timeout: 5000,
          url: document.location.href,
          error: function(xhr, status, err) {
            console.error("Reloading failed: status=" + status + " error=" + err);
          },
          success: function(data, status, xhr) {
            var body = $($.parseHTML(data)).not('title, meta, link, script');
            $(document.body).empty().append(body);
            $('#refresh').text("Refreshed at: " + new Date());
            updateBadge();
          }
        };
        setInterval(function(){ $.ajax(settings); }, 60 * 1000);

        // Select the entire branch name when clicked.
        $(document).on('mousedown', '.branch', function(e) {
          if (typeof window.getSelection !== 'function') return;
          var sel = window.getSelection();
          var range = document.createRange();
          range.selectNodeContents(e.target);
          sel.removeAllRanges();
          sel.addRange(range);
          e.preventDefault();
        });

      })();

  body(data-count=countMine)

    div.navbar.navbar-inverse.navbar-fixed-top
      div.navbar-inner
        div.container
          a.brand(href='/') Pull Request Viewer
          div.pull-right.profile
            img(src=profile._json.avatar_url)
            = profile.displayName

    div.container

      if pulls.length

        table.table.table-bordered

          thead
            tr
              th Number
              th Title
              th Submitter
              th Reviewers
              th Review Status
              th Updated At
              th Last Comment
              th Build Status

          tbody
            for pull in pulls
              tr(class="pullrequest "+pull.class)
                td
                  a(href=pull.html_url) ##{ pull.number }
                td
                  = pull.displayTitle
                  | &nbsp;
                  for tag in pull.tags
                    span.label.label-default= tag.toLowerCase()
                  div.branch= pull.head.ref
                td
                  - var u = pull.submitter
                  img(src=u.avatar, title=u.username)
                td
                  if pull.anyReviewer
                    span.label.label-info Anybody
                  else
                    for reviewer in pull.reviewers
                      if reviewer.avatar
                        - var u = reviewer
                        img(src=u.avatar, title=u.username)
                      else
                        span= reviewer.username
                td
                  span(class="label label-"+pull.reviewStatusClass)= pull.reviewStatus
                td.nowrap
                  = pull.last_update_string
                td.last_update
                  if pull.last_comment && pull.last_user
                    - var u = pull.last_user
                    img(src=u.avatar, title=u.username)
                    a(href=pull.last_comment.html_url) ##{ pull.num_comments }
                    div.content= humanize.truncate(pull.last_comment.body, 200)
                  else
                    span.muted (none)
                td
                  span(class="label label-"+pull.buildStatusClass)= pull.buildStatus

        div.muted
          | Showing open pull requests from:
          for repo in settings.github.repos
            a.muted(href="https://github.com/"+repo.user+"/"+repo.repo)
              | &nbsp;
              | #{ repo.user }/#{ repo.repo }
          br
          | Approximate GitHub API calls remaining: #{ rateLimitRemaining }
          br
          | Pull Requests older than one month are hidden.
          br
          span#refresh Loaded at #{ new Date() }

      else
        div(style="text-align: center")
          h1 No open pull requests!
          img(src='http://i.imgur.com/ZtKoPEK.png')
